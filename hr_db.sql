-- In this project HR related queries will take place. There are 3 tables:
-- PERSON: Columns: ID, CODE, TCNUMBER, NAME_, SURNAME, GENDER, BIRTHDATE, INDATE, OUTDATE, DEPARTMENTID, POSITIONID, PARENTPOSITIONID, MANAGERID, TELNR, SALARY
-- DEPARTMENT: Columns: ID, DEPARTMENT
-- POSITION: Columns: ID, POSITION

-- Create a database HR, tables PERSON, DEPARTMENT and POSITION
CREATE DATABASE HR
CREATE TABLE DEPARTMENT (ID INT IDENTITY(1,1) PRIMARY KEY, DEPARTMENT VARCHAR(50))
CREATE TABLE POSITION (ID INT IDENTITY(1,1) PRIMARY KEY, POSITION VARCHAR(100))
CREATE TABLE PERSON (ID INT IDENTITY(1,1) PRIMARY KEY, CODE VARCHAR(10), TCNUMBER VARCHAR(11), NAME_ VARCHAR(50), SURNAME VARCHAR(50), 
GENDER VARCHAR(1), BIRTHDATE DATE, INDATE DATE, OUTDATE DATE, DEPARTMENTID INT, POSITIONID INT, PARENTPOSITIONID INT, MANAGERID INT, 
TELNR VARCHAR(15), SALARY FLOAT)

-- Employees that still work in the company
SELECT * FROM PERSON WHERE OUTDATE IS NULL

-- Number of male and female employees that still work by department 
SELECT D.DEPARTMENT, 
CASE WHEN P.GENDER = 'E' THEN 'Male' 
     ELSE 'Female' END GENDER, 
COUNT(P.ID) PERSONCOUNT FROM PERSON P
JOIN DEPARTMENT D ON D.ID = P.DEPARTMENTID 
WHERE P.OUTDATE IS NULL
GROUP BY D.DEPARTMENT, P.GENDER
ORDER BY D.DEPARTMENT

-- Number of male and female employees that still work by department, each number in a separate column
SELECT D.DEPARTMENT,
(SELECT COUNT(ID) FROM PERSON WHERE DEPARTMENTID = D.ID AND GENDER='E' AND OUTDATE IS NULL) MALE_COUNT, 
(SELECT COUNT(ID) FEMALE_COUNT FROM PERSON WHERE DEPARTMENTID = D.ID AND GENDER='K' AND OUTDATE IS NULL) FEMALE_COUNT,
(SELECT COUNT(ID) FEMALE_COUNT FROM PERSON WHERE DEPARTMENTID = D.ID AND OUTDATE IS NULL) TOTAL_COUNT
FROM DEPARTMENT D
ORDER BY D.DEPARTMENT

-- Expected minimum, maximum and average salary of a new employed planning chief
SELECT POSITION, MIN(SALARY) MIN_SALARY, MAX(SALARY) MAX_SALARY, ROUND(AVG(SALARY),2) AVG_SALARY FROM PERSON P
JOIN POSITION PO ON PO.ID=P.POSITIONID
WHERE PO.POSITION = 'PLANLAMA ÞEFÝ'
GROUP BY POSITION

SELECT PO.POSITION, 
(SELECT MIN(SALARY) FROM PERSON WHERE POSITIONID = PO.ID) MIN_SALARY,
(SELECT MAX(SALARY) FROM PERSON WHERE POSITIONID = PO.ID) MAX_SALARY,
(SELECT ROUND(AVG(SALARY),0) FROM PERSON P WHERE P.POSITIONID = PO.ID) AVG_SALARY
FROM POSITION PO
WHERE PO.POSITION = 'PLANLAMA ÞEFÝ'

-- Number of employees and average salaries in each position
SELECT PO.POSITION, COUNT(P.ID) EMPLOYEE_COUNT, ROUND(AVG(SALARY),0) AVG_SALARY FROM PERSON P
JOIN POSITION PO ON PO.ID = P.POSITIONID
GROUP BY PO.POSITION

SELECT PO.POSITION,
(SELECT COUNT(ID) FROM PERSON WHERE POSITIONID = PO.ID) EMPLOYEE_COUNT,
(SELECT ROUND(AVG(SALARY),0) FROM PERSON WHERE POSITIONID = PO.ID) AVG_SALARY
FROM POSITION PO
ORDER BY POSITION

-- Number of employment per year by gender
SELECT YEAR(P.INDATE) YEAR_, 
(SELECT COUNT(ID) FROM PERSON WHERE GENDER='E' AND YEAR(INDATE)= YEAR(P.INDATE)) MALE_COUNT, 
(SELECT COUNT(ID) FROM PERSON WHERE GENDER = 'K' AND YEAR(INDATE)= YEAR(P.INDATE)) FEMALE_COUNT FROM PERSON P
GROUP BY YEAR(P.INDATE)
ORDER BY YEAR_

-- How many months each employee has been working
SELECT NAME_ + ' ' + SURNAME PERSON, INDATE, OUTDATE, 
CASE WHEN OUTDATE IS NOT NULL THEN 'WORKING' 
	 ELSE 'NOT WORKING'
END WORKINGSTATUS,

CASE WHEN OUTDATE IS NOT NULL THEN DATEDIFF(MONTH,INDATE,OUTDATE) 
	 ELSE DATEDIFF(MONTH, INDATE, GETDATE())
END WORKINGTIME
FROM PERSON

SELECT NAME_ + ' ' + SURNAME PERSON, INDATE, OUTDATE,
'WORKING' WORKINGSTATUS,
DATEDIFF(MONTH, INDATE, GETDATE()) WORKINGTIME
FROM PERSON WHERE OUTDATE IS NULL
UNION ALL
SELECT NAME_ + ' ' + SURNAME PERSON, INDATE, OUTDATE,
'NOT WORKING' WORKINGSTATUS,
DATEDIFF(MONTH, INDATE, OUTDATE) WORKINGTIME
FROM PERSON WHERE OUTDATE IS NOT NULL

-- Number of employee name initials 
SELECT LEFT(NAME_, 1)+'. ' + LEFT(SURNAME, 1)+'.' SHORTNAME,
COUNT(*) PERSONCOUNT
FROM PERSON
GROUP BY LEFT(NAME_, 1), LEFT(SURNAME, 1)
ORDER BY COUNT(*) DESC

-- Departments that have average salary above 5500
SELECT DEPARTMENT, ROUND(AVG(P.SALARY),0) AVGSALARY FROM DEPARTMENT D
JOIN PERSON P ON P.DEPARTMENTID = D.ID
GROUP BY DEPARTMENT
HAVING AVG(P.SALARY) > 5500

SELECT DEPARTMENT,
(SELECT ROUND(AVG(SALARY),0) FROM PERSON WHERE DEPARTMENTID= D.ID) AVGSALARY
FROM DEPARTMENT D
WHERE (SELECT AVG(SALARY) FROM PERSON WHERE DEPARTMENTID= D.ID) > 5500

SELECT * FROM (
SELECT DEPARTMENT, ROUND(AVG(P.SALARY),0) AVGSALARY FROM DEPARTMENT D
JOIN PERSON P ON P.DEPARTMENTID = D.ID
GROUP BY DEPARTMENT
) T WHERE AVGSALARY>5500

-- Average seniority of departments in months
SELECT DEPARTMENT, AVG(WORKINGTIME) AVG_WORKINGTIME FROM (
SELECT D.DEPARTMENT,
CASE WHEN OUTDATE IS NOT NULL THEN DATEDIFF(MONTH, INDATE, OUTDATE) 
ELSE DATEDIFF(MONTH, INDATE, GETDATE())
END WORKINGTIME
FROM PERSON P
JOIN DEPARTMENT D ON D.ID= P.DEPARTMENTID) T
GROUP BY DEPARTMENT
ORDER BY 1

-- The name and position of each employee, the name and position of the unit manager that he/she is affiliated with
SELECT P.NAME_+' '+P.SURNAME PERSON, PO.POSITION,
P2.NAME_+ ' ' + P2.SURNAME MANAGERNAME, PO2.POSITION MANAGERPOSITION
FROM PERSON P
JOIN POSITION PO ON PO.ID = P.POSITIONID
JOIN PERSON P2 ON P2.ID = P.MANAGERID
JOIN POSITION PO2 ON PO2.ID = P2.POSITIONID







