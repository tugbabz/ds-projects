-- In this project, in the database CUSTOMERS, there are 3 tables, CUSTOMERS, CITIES and DISTRICTS. 

-- Customers whose name start with 'A'
SELECT *  FROM CUSTOMERS WHERE NAMESURNAME LIKE 'A%'

-- Male customers whose name start with 'A'
SELECT * FROM CUSTOMERS WHERE NAMESURNAME LIKE 'A%' AND GENDER = 'E'

-- Customers who were born between 1990 and 1995, both included
SELECT * FROM CUSTOMERS WHERE DATEPART(YEAR, BIRTHDATE) BETWEEN 1990 AND 1995

-- Customers who live in Istanbul
SELECT C.*, CT.CITY FROM CUSTOMERS C JOIN CITIES CT ON CT.ID = C.CITYID WHERE CT.CITY = '�STANBUL'

-- Customers who live in Istanbul (Subquery)
SELECT (SELECT CITY FROM CITIES WHERE ID = C.CITYID), C.* FROM CUSTOMERS C WHERE (SELECT CITY FROM CITIES WHERE ID = C.CITYID) = '�STANBUL'

-- Customers who live in Istanbul or Ankara (Subquery)
SELECT * FROM CUSTOMERS C WHERE C.CITYID IN (SELECT ID FROM CITIES WHERE CITY IN ('�STANBUL', 'ANKARA')) 

-- Number of customers per city
SELECT CT.CITY, COUNT (*) NUMBER_OF_CUSTOMERS FROM CUSTOMERS C
JOIN CITIES CT ON CT.ID = C.CITYID GROUP BY CT.CITY

SELECT *, (SELECT COUNT(*) FROM CUSTOMERS C WHERE CITYID = CT.ID ) FROM CITIES CT ORDER BY 3

-- Cities having customers larger than 10
SELECT CT.CITY, COUNT(C.ID) CUSTOMERCOUNT FROM CUSTOMERS C
JOIN CITIES CT ON CT.ID = C.CITYID
GROUP BY CT.CITY
HAVING COUNT(C.ID) > 10
ORDER BY CUSTOMERCOUNT DESC

SELECT CT.CITY, (SELECT COUNT(*) FROM CUSTOMERS C WHERE CITYID = CT.ID ) CUSTOMERCOUNT FROM CITIES CT 
WHERE (SELECT COUNT(*) FROM CUSTOMERS C WHERE CITYID = CT.ID ) > 10 
ORDER BY CUSTOMERCOUNT DESC

-- Number of customers of each gender in each city
SELECT CT.CITY, C.GENDER, COUNT(C.ID) CUSTOMERCOUNT FROM CUSTOMERS C
JOIN CITIES CT ON CT.ID = C.CITYID
GROUP BY CT.CITY, C.GENDER
ORDER BY CT.CITY

-- Number of customers of each gender in each city, genders as the columns
SELECT CITY,
(SELECT COUNT(*) FROM CUSTOMERS C WHERE CITYID = CT.ID AND GENDER='E') MALECOUNT,
(SELECT COUNT(*) FROM CUSTOMERS C WHERE CITYID = CT.ID AND GENDER = 'K') FEMALECOUNT
FROM CITIES CT

-- Add new column
ALTER TABLE CUSTOMERS ADD AGEGROUP VARCHAR(50)

-- Categorize ages and insert into AGEGROUP column.
UPDATE CUSTOMERS SET AGEGROUP = '20-35' WHERE DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 20 AND 35 
UPDATE CUSTOMERS SET AGEGROUP = '36-45' WHERE DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 36 AND 45 
UPDATE CUSTOMERS SET AGEGROUP = '46-55' WHERE DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 46 AND 55 
UPDATE CUSTOMERS SET AGEGROUP = '56-65' WHERE DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 56 AND 65 
UPDATE CUSTOMERS SET AGEGROUP = 'OVER 65' WHERE DATEDIFF(YEAR, BIRTHDATE, GETDATE()) > 65 

-- Count the number of each age group without using AGEGROUP column.
SELECT AGEGROUP2, COUNT(TMP.ID) CUSTOMERCOUNT FROM
(SELECT *,
CASE WHEN DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 20 AND 35 THEN '20-35'
WHEN DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 36 AND 45 THEN '36-45'
WHEN DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 46 AND 55 THEN '46-55'
WHEN DATEDIFF(YEAR, BIRTHDATE, GETDATE()) BETWEEN 56 AND 65 THEN '56-65'
WHEN DATEDIFF(YEAR, BIRTHDATE, GETDATE()) > 65 THEN 'OVER 65' END AGEGROUP2 FROM CUSTOMERS) TMP

GROUP BY AGEGROUP2
ORDER BY AGEGROUP2
 
 -- Customers who live in Istanbul and outside Kadikoy region.
 SELECT * FROM CUSTOMERS C 
 JOIN CITIES CT ON CT.ID = C.CITYID
 JOIN DISTRICTS D ON D.ID = C.DISTRICTID
 WHERE CT.CITY = '�STANBUL' AND D.DISTRICT <> 'KADIK�Y'

 SELECT * FROM CUSTOMERS C WHERE CITYID IN (SELECT ID FROM CITIES CT WHERE CITY = '�STANBUL') AND 
 DISTRICTID NOT IN (SELECT ID FROM DISTRICTS WHERE DISTRICT='KADIK�Y')

 --	Customers who have null space in city column
 SELECT * FROM CUSTOMERS C
 LEFT JOIN CITIES CT ON CT.ID = C.CITYID
 WHERE CT.CITY IS NULL

 SELECT * FROM CUSTOMERS WHERE CITYID NOT IN (SELECT ID FROM CITIES)

 -- Mobile operator of phone numbers in a separate column
 SELECT *, SUBSTRING(TELNR1, 2, 3) OPERATOR1, 
 SUBSTRING(TELNR2, 2, 3) OPERATOR2 FROM CUSTOMERS

 -- Mobile operator counts in a separate column
 SELECT 
 SUM(TELNR1_XCOUNT+TELNR2_XCOUNT) AS X_OPERATOR_COUNT,
 SUM(TELNR1_YCOUNT+TELNR2_YCOUNT) AS Y_OPERATOR_COUNT,
 SUM(TELNR1_ZCOUNT+TELNR2_ZCOUNT) AS Z_OPERATOR_COUNT
 FROM
 (SELECT CASE WHEN TELNR1 LIKE '(50%' OR TELNR1 LIKE '(55%' THEN 1 ELSE 0 
 END AS TELNR1_XCOUNT, 
 CASE WHEN TELNR1 LIKE '(54%' THEN 1 ELSE 0 
 END AS TELNR1_YCOUNT, 
 CASE WHEN TELNR1 LIKE '(53%' THEN 1 ELSE 0 
 END AS TELNR1_ZCOUNT, 
 
 CASE WHEN TELNR2 LIKE '(50%' OR TELNR2 LIKE '(55%' THEN 1 ELSE 0 
 END AS TELNR2_XCOUNT, 
 CASE WHEN TELNR2 LIKE '(54%' THEN 1 ELSE 0 
 END AS TELNR2_YCOUNT, 
 CASE WHEN TELNR2 LIKE '(53%' THEN 1 ELSE 0 
 END AS TELNR2_ZCOUNT, 
  *
 FROM CUSTOMERS) T
 
 -- The district with the most customers for each city 
  SELECT CT.CITY, D.DISTRICT, COUNT(C.ID) CUSTOMERCOUNT FROM CUSTOMERS C
 JOIN CITIES CT ON CT.ID= C.CITYID
 JOIN DISTRICTS D ON D.ID = C.DISTRICTID
 GROUP BY CT.CITY, D.DISTRICT
 ORDER BY CT.CITY, COUNT(C.ID) DESC

 -- The names of the days of the customer birthdays
 SELECT NAMESURNAME, BIRTHDATE, DATENAME(DW, BIRTHDATE) DAY_OF_WEEK FROM CUSTOMERS

 -- Customers whose birthday is today
 SELECT *  FROM CUSTOMERS
 WHERE MONTH(BIRTHDATE) = MONTH(GETDATE()) AND DAY(BIRTHDATE) = DAY(GETDATE()) 
 











